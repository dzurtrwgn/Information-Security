/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vegenere;

/**
 *
 * @author PC
 */
public class Vegenere_Form extends javax.swing.JFrame {

    /**
     */
    public Vegenere_Form() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtPlainText = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtKhoa = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnmahoa = new javax.swing.JButton();
        btngiaima = new javax.swing.JButton();
        txtCipherText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 12)); // NOI18N
        jLabel1.setText("Thuật Toán Mã Hóa Vegenere Cipher");

        txtPlainText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlainTextActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("PlainText:");

        txtKhoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKhoaActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Key:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setText("Cipher Text:");

        btnmahoa.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnmahoa.setText("Encryption");
        btnmahoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnmahoaActionPerformed(evt);
            }
        });

        btngiaima.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btngiaima.setText("Decryption");
        btngiaima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btngiaimaActionPerformed(evt);
            }
        });

        txtCipherText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCipherTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtPlainText, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnmahoa)
                                        .addGap(38, 38, 38)
                                        .addComponent(btngiaima))
                                    .addComponent(txtKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(txtCipherText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtPlainText, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnmahoa)
                    .addComponent(btngiaima))
                .addGap(22, 22, 22)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtCipherText, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPlainTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlainTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlainTextActionPerformed

    private void txtKhoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKhoaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKhoaActionPerformed

    private void btnmahoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnmahoaActionPerformed
        // TODO add your handling code here:
        int tableRowSize = 26;
        int tableColumnSize = 26;
        int vignereTable[][] = new int[26][26];
        
        for (int rows = 0; rows < tableRowSize; rows++)
        {
             for (int columns = 0; columns < tableColumnSize; columns++)
             {
                 vignereTable[rows][columns] = (rows + columns)% 26;
             } 
        }
        System.out.println("Enter the PlainText");
        String plainText = txtPlainText.getText();
        plainText = plainText.toUpperCase();
        System.out.println("Enter the Key: ");
        String key = txtKhoa.getText();
        key = key.toUpperCase();
        String cipherText = "";
        int keyIndex = 0;
        for (int ptextIndex = 0; ptextIndex < plainText.length(); ptextIndex++ )
        {
            char pChar = plainText.charAt(ptextIndex);
            int asciiVal = (int)pChar;
            if (pChar == ' ')
            {
                cipherText += pChar;
                continue;
            }
            if (asciiVal < 65 || asciiVal > 90)
            {
                cipherText += pChar;
                continue;
            }
            int basicPlainTextValue = ((int) pChar) - 65;
            char kChar = key.charAt(keyIndex);
            int basicKeyValue = ((int) kChar) - 65;
            int tableEntry = vignereTable[basicPlainTextValue][basicKeyValue];
            char cChar = (char) (tableEntry + 65);
            cipherText += cChar;
            keyIndex++;
            if (keyIndex == key.length())
                keyIndex = 0;
        }
        System.out.println("Cirpher Text is; " + cipherText);
        txtCipherText.setText(cipherText.toString().toUpperCase());
        
    }//GEN-LAST:event_btnmahoaActionPerformed

    private void btngiaimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btngiaimaActionPerformed
        // TODO add your handling code here:
        int tableRowSize = 26;
        int tableColumnSize = 26;
        int vignereTable[][] = new int[26][26];
        String cipherText = txtCipherText.getText();
        String plainText = "";
        
        for (int rows = 0; rows < tableRowSize; rows++)
        {
             for (int columns = 0; columns < tableColumnSize; columns++)
             {
                 vignereTable[rows][columns] = (rows + columns)% 26;
             } 
        }
        System.out.println("Enter the Cipher Text");       
        cipherText = cipherText.toUpperCase();
        System.out.println("Enter the Key: ");
        String key = txtKhoa.getText();
        key = key.toUpperCase();
        
        int keyIndex = 0;
        for (int ctextIndex = 0; ctextIndex < cipherText.length(); ctextIndex++ )
        {
            char cChar = cipherText.charAt(ctextIndex);
            int asciiVal = (int)cChar;
            if (cChar == ' ')
            {
                plainText += cChar;
                continue;
            }
            if (asciiVal < 65 || asciiVal > 90)
            {
                plainText += cChar;
                continue;
            }
            //System.out.println("Cirpher Text is 1; " + cipherText);
            int basicCipherTextValue = ((int) cChar) - 65;
            char kChar = key.charAt(keyIndex);
            int basicKeyValue = ((int) kChar) - 65;
           for (int pIndex = 0; pIndex < tableColumnSize; pIndex++)
           {
               if (vignereTable [basicKeyValue][pIndex]  == basicCipherTextValue)
               {
               char potcChar = (char) (vignereTable[basicCipherTextValue][basicKeyValue] + 65);
               char potpChar = (char) (pIndex + 65);
               plainText += potcChar;
              }
           }

        }
        System.out.println("Plain Text is; " + plainText);
        txtCipherText.setText(cipherText.toString().toUpperCase());
        txtPlainText.setText(plainText.toString().toUpperCase());
        
    }//GEN-LAST:event_btngiaimaActionPerformed

    private void txtCipherTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCipherTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCipherTextActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vegenere_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vegenere_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vegenere_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vegenere_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vegenere_Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btngiaima;
    private javax.swing.JButton btnmahoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtCipherText;
    private javax.swing.JTextField txtKhoa;
    private javax.swing.JTextField txtPlainText;
    // End of variables declaration//GEN-END:variables
}
