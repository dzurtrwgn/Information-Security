/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package des;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.logging.Logger;
import java.util.logging.Level;
import javax.crypto.Cipher;
import javax.crypto.CipherInputStream;
import javax.crypto.CipherOutputStream;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESKeySpec;
import javax.swing.JOptionPane;

/**
 *
 * @author DzurTrwgn
 */
public class DES_Form extends javax.swing.JFrame {

    /**
     * Creates new form DES_Form
     */
    public DES_Form() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtInputKey = new javax.swing.JTextField();
        btnEncrypt = new javax.swing.JButton();
        btnDisplay = new javax.swing.JButton();
        btnSaveFile = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnDecrypt = new javax.swing.JButton();
        btnAllShow = new javax.swing.JButton();
        txtCirpherText = new javax.swing.JTextField();
        txtPlainText = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("DES");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Input Key:");

        txtInputKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInputKeyActionPerformed(evt);
            }
        });

        btnEncrypt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEncrypt.setText("Encryption");
        btnEncrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncryptActionPerformed(evt);
            }
        });

        btnDisplay.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDisplay.setText("Display");

        btnSaveFile.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnSaveFile.setText("Save File");
        btnSaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveFileActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("PlainText:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("CipherText:");

        btnDecrypt.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDecrypt.setText("Decryption");
        btnDecrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecryptActionPerformed(evt);
            }
        });

        btnAllShow.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAllShow.setText("All Show");
        btnAllShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAllShowActionPerformed(evt);
            }
        });

        txtPlainText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlainTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(179, 179, 179)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 22, Short.MAX_VALUE))
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnDecrypt)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAllShow))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnEncrypt)
                                .addGap(36, 36, 36)
                                .addComponent(btnDisplay)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSaveFile))
                            .addComponent(txtInputKey)
                            .addComponent(txtCirpherText)
                            .addComponent(txtPlainText, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtInputKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEncrypt)
                    .addComponent(btnDisplay)
                    .addComponent(btnSaveFile))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(txtPlainText, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtCirpherText, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(51, 51, 51))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnDecrypt)
                                    .addComponent(btnAllShow))
                                .addGap(12, 12, 12))))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtInputKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInputKeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInputKeyActionPerformed

    private void btnEncryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncryptActionPerformed
        // TODO add your handling code here:
        try {
            String InputKey = txtInputKey.getText();
            
            FileInputStream fis = new FileInputStream("D:\\Des.txt");
            FileOutputStream fos = new FileOutputStream("D:\\EnDes.txt");
            
            encrypt(InputKey, fis, fos);
            JOptionPane.showMessageDialog(null, "Done Encryption Message ");
            
        }
        catch (Throwable e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnEncryptActionPerformed

    private void txtPlainTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlainTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPlainTextActionPerformed

    private void btnDecryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecryptActionPerformed
        // TODO add your handling code here:
        FileInputStream fis2 = null;
        try {
            String InputKey = txtInputKey.getText();
            fis2 = new FileInputStream("D:\\EnDes.txt");
            FileOutputStream fos2 = new FileOutputStream("D:\\DeDes.txt");
            decrypt (InputKey, fis2, fos2);
            BufferedReader br = null;
            String fileName = "D:\\DeDes.txt";
            br = new BufferedReader(new FileReader(fileName));
            StringBuffer sb = new  StringBuffer();
            JOptionPane.showMessageDialog(null, "Decryption Done");
            char[] ca = new char[5];
            while (br.ready())
            {
                int len = br.read(ca);
                sb.append(ca, 0, len);
                
            }
            br.close();
            System.out.println("Data is: " + " " + sb);
            String chuoi = sb.toString();
            txtPlainText.setText(chuoi);
            
        }
        catch (Throwable ex){
            Logger.getLogger(DES_Form.class.getName()).log(Level.SEVERE, null,ex);   
        } 
            finally
        {
            try
            {
                fis2.close();
                
            }
                catch (IOException ex)
                {
                   Logger.getLogger(DES_Form.class.getName()).log(Level.SEVERE, null,ex);   
                }
        }
    }//GEN-LAST:event_btnDecryptActionPerformed

    private void btnSaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveFileActionPerformed
        // TODO add your handling code here:
        try {
            BufferedWriter bw = null;
            //ghi van da ma hoa
            String fileName = "D:\\Des.txt";
            //luu van ban
            String s = txtPlainText.getText();
            bw = new BufferedWriter(new FileWriter(fileName));
            //ghi vb
            bw.write(s);
            bw.close();
            JOptionPane.showMessageDialog(null, "Done Save File");
            txtPlainText.setText(s);
        }catch (IOException ex)
            {
                Logger.getLogger(DES_Form.class.getName()).log(Level.SEVERE, null,ex);   
            }
    }//GEN-LAST:event_btnSaveFileActionPerformed

    private void btnAllShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAllShowActionPerformed
        // TODO add your handling code here:
        try{
            BufferedReader br = null;
            String fileName = "D:\\EnDes.txt";
            br = new BufferedReader (new FileReader(fileName));
            StringBuffer sb = new StringBuffer();
            
            JOptionPane.showMessageDialog(null, " Done Open File ");
            char[] ca = new char[5];
            while (br.ready()){
                int len = br.read(ca);
                sb.append(ca, 0, len);
            }
            br.close();
            //xuat chuoo
            System.out.println(" Data is:" + " " + sb);
            String chuoi = sb.toString();
            
            txtPlainText.setText(chuoi);
        }catch (IOException ex){
            Logger.getLogger(DES_Form.class.getName()).log(Level.SEVERE, null, ex);   
        }
    }//GEN-LAST:event_btnAllShowActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DES_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DES_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DES_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DES_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DES_Form().setVisible(true);
            }
        });
    }
    
    private int mode;
    private static void doCopy(InputStream is, OutputStream os) throws IOException{
        byte[] bytes = new byte[64];
            int numBytes;
            while ((numBytes = is.read(bytes)) != -1) 
            {
                os.write(bytes, 0, numBytes);
            }
            os.flush();
            os.close();
            is.close();
    }

  
    public static void encrypt (String key, InputStream is, OutputStream os) throws Throwable {
        encryptOrDecrypt(key, Cipher.ENCRYPT_MODE, is, os);
    }
    public static void decrypt (String key, InputStream is, OutputStream os) throws Throwable {
        encryptOrDecrypt(key, Cipher.DECRYPT_MODE, is, os);
    }
     public static void encryptOrDecrypt (String key, int mode, InputStream is, OutputStream os) throws Throwable {
         DESKeySpec dks = new DESKeySpec(key.getBytes());
         SecretKeyFactory skf = SecretKeyFactory.getInstance("DES");
         SecretKey desKey = skf.generateSecret(dks);
         Cipher cipherText = Cipher.getInstance("DES");
            
         if (mode == Cipher.ENCRYPT_MODE)
         {
             cipherText.init(Cipher.ENCRYPT_MODE, desKey);
             CipherInputStream cis = new CipherInputStream(is,cipherText);
             doCopy(cis, os);
         }
         else if (mode == Cipher.DECRYPT_MODE)
         {
             cipherText.init(Cipher.DECRYPT_MODE, desKey);
             CipherOutputStream cos = new CipherOutputStream(os,cipherText);
             doCopy(is, cos);
         }
     
     }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAllShow;
    private javax.swing.JButton btnDecrypt;
    private javax.swing.JButton btnDisplay;
    private javax.swing.JButton btnEncrypt;
    private javax.swing.JButton btnSaveFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField txtCirpherText;
    private javax.swing.JTextField txtInputKey;
    private javax.swing.JTextField txtPlainText;
    // End of variables declaration//GEN-END:variables
}
