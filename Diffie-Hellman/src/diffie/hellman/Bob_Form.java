/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package diffie.hellman;

import java.io.BufferedWriter;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.security.KeyFactory;
import java.security.KeyPair;
import java.security.KeyPairGenerator;
import java.security.PublicKey;
import java.security.spec.X509EncodedKeySpec;
import javax.crypto.Cipher;
import javax.crypto.KeyAgreement;
import javax.crypto.SecretKey;
import javax.crypto.interfaces.DHPublicKey;
import javax.crypto.spec.DHParameterSpec;

/**
 *
 * @author DzurTrwgn
 */
public class Bob_Form extends javax.swing.JFrame {

    /**
     * Creates new form Bob_Form
     */
    public Bob_Form() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        txtKeyB = new javax.swing.JTextField();
        txtKeyA = new javax.swing.JTextField();
        txtKeyKAB = new javax.swing.JTextField();
        txtEncyptKAB = new javax.swing.JTextField();
        btnKeyAlice = new javax.swing.JButton();
        btnKeyBoB = new javax.swing.JButton();
        btnKeyAB = new javax.swing.JButton();
        btnEncyptKAB = new javax.swing.JButton();
        btnEncOrDec = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Key BOB:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Key Alice:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Key KAB:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Encypt KAB:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Bob");

        txtKeyB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKeyBActionPerformed(evt);
            }
        });

        btnKeyAlice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnKeyAlice.setText("Create Key B");
        btnKeyAlice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeyAliceActionPerformed(evt);
            }
        });

        btnKeyBoB.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnKeyBoB.setText("Display KB");
        btnKeyBoB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeyBoBActionPerformed(evt);
            }
        });

        btnKeyAB.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnKeyAB.setText("Public Key");
        btnKeyAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeyABActionPerformed(evt);
            }
        });

        btnEncyptKAB.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEncyptKAB.setText("Encypt KAB");
        btnEncyptKAB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncyptKABActionPerformed(evt);
            }
        });

        btnEncOrDec.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEncOrDec.setText("Encypt/Decrypt");
        btnEncOrDec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncOrDecActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(173, 173, 173)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(51, 51, 51)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEncOrDec)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtKeyA)
                            .addComponent(txtKeyB)
                            .addComponent(txtEncyptKAB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtKeyKAB, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnKeyAlice, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                                .addGap(11, 11, 11))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnKeyBoB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnKeyAB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnEncyptKAB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtKeyB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKeyAlice))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtKeyA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKeyBoB))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtKeyKAB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnKeyAB))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtEncyptKAB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEncyptKAB)))
                .addGap(18, 18, 18)
                .addComponent(btnEncOrDec)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    KeyAgreement bobKeyAgree;
    PublicKey alicePubKey;
    SecretKey bobDesKey;
    Cipher bobCipher;
            
    private void txtKeyBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKeyBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtKeyBActionPerformed

    private void btnKeyAliceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeyAliceActionPerformed
        // TODO add your handling code here:
//        try{
//            FileInputStream fis = new FileInputStream("D:\\A.pub");
//            byte[] akeyP = new byte[fis.available()];
//            fis.read (akeyP);
//            fis.close();
//            txtKeyAlice.setText(akeyP.toString());
//        } catch (Exception ex){}
        
        try{
            boolean read = false;
            
        while(!read){
            try{
                FileInputStream fis = new FileInputStream("D:\\A.pub");
                fis.close();
                read = true;
            } catch (Exception ex){}
        }
        
        FileInputStream fis = new FileInputStream("D:\\A.pub");
        byte[] alicePubKeyEnc = new byte[fis.available()];
        fis.read(alicePubKeyEnc);
        fis.close();
        KeyFactory bobKeyFac = KeyFactory.getInstance("DH");
        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(alicePubKeyEnc);
        alicePubKey = bobKeyFac.generatePublic(x509KeySpec);
        DHParameterSpec dhParamSpec = ((DHPublicKey) alicePubKey).getParams();
        System.out.println("Generate DH keypair ...");
        KeyPairGenerator bobKpairGen = KeyPairGenerator.getInstance("DH");
        bobKpairGen.initialize(dhParamSpec);
        KeyPair bobKpair = bobKpairGen.generateKeyPair();
        System.out.println("Initializing KeyAgreement engine ...");
        bobKeyAgree = KeyAgreement.getInstance("DH");
        bobKeyAgree.init(bobKpair.getPrivate());
        byte[] bobPubKeyEnc = bobKpair.getPublic().getEncoded();
            FileOutputStream fos = new FileOutputStream("D:\\B.pub");
            fos.write(bobPubKeyEnc);
            fos.close();
            txtKeyB.setText(bobPubKeyEnc.toString());
        } catch (Exception ex)
        {
        }
        
        
        
    }//GEN-LAST:event_btnKeyAliceActionPerformed

    private void btnKeyBoBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeyBoBActionPerformed
        // TODO add your handling code here:

//           try{
//            boolean read = false;
//            
//        while(!read){
//            try{
//                FileInputStream fis = new FileInputStream("D:\\A.pub");
//                fis.close();
//                read = true;
//            } catch (Exception ex){}
//        }
//        
//        FileInputStream fis = new FileInputStream("D:\\A.pub");
//        byte[] alicePubKeyEnc = new byte[fis.available()];
//        fis.read(alicePubKeyEnc);
//        fis.close();
//        KeyFactory bobKeyFac = KeyFactory.getInstance("DH");
//        X509EncodedKeySpec x509KeySpec = new X509EncodedKeySpec(alicePubKeyEnc);
//        alicePubKey = bobKeyFac.generatePublic(x509KeySpec);
//        DHParameterSpec dhParamSpec = ((DHPublicKey) alicePubKey).getParams();
//        System.out.println("Generate DH keypair ...");
//        KeyPairGenerator bobKpairGen = KeyPairGenerator.getInstance("DH");
//        bobKpairGen.initialize(dhParamSpec);
//        KeyPair bobKpair = bobKpairGen.generateKeyPair();
//        System.out.println("Initializing KeyAgreement engine ...");
//        bobKeyAgree = KeyAgreement.getInstance("DH");
//        bobKeyAgree.init(bobKpair.getPrivate());
//        byte[] bobPubKeyEnc = bobKpair.getPublic().getEncoded();
//            FileOutputStream fos = new FileOutputStream("D:\\B.pub");
//            fos.write(bobPubKeyEnc);
//            fos.close();
//            txtKeyBoB.setText(bobPubKeyEnc.toString());
//        } catch (Exception ex)
//        {
//        }

            try{
            FileInputStream fis = new FileInputStream("D:\\A.pub");
            byte[] akeyP = new byte[fis.available()];
            fis.read (akeyP);
            fis.close();
            txtKeyA.setText(akeyP.toString());
        } catch (Exception ex){}
    }//GEN-LAST:event_btnKeyBoBActionPerformed

    private void btnKeyABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeyABActionPerformed
        // TODO add your handling code here:
        try{
            bobKeyAgree.doPhase (alicePubKey, true);
            byte[] bobShareSecret = bobKeyAgree.generateSecret();
            System.out.println("Public Key: Shared Secret (DDBUG ONLY) : " + CryptoUtil.toHexString(bobShareSecret));
            txtKeyKAB.setText(CryptoUtil.toHexString(bobShareSecret));
            
        }
        catch (Exception ex)
        {

        }
    }//GEN-LAST:event_btnKeyABActionPerformed

//      private void btnKeyAliceActionPerformed(java.awt.event.ActionEvent evt) {                                                 
//        // TODO add your handling code here:
//        
//        try{
//            FileInputStream fis = new FileInputStream("D:\\B.pub");
//            byte[] bkeyP=new byte[fis.available()];
//            fis.read(bkeyP);
//            fis.close();
//            txtKeyBoB.setText(bkeyP.toString());
//        } catch (Exception ex) {}
//    }                                                

    
    private void btnEncyptKABActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncyptKABActionPerformed
        // TODO add your handling code here:
        // ma hoa chung bang thuat toan DES

        try{
            bobKeyAgree.doPhase(alicePubKey,true);
            bobDesKey = bobKeyAgree.generateSecret("DES");
            txtEncyptKAB.setText(bobDesKey.toString());
            
            //khoa chung  A - B
            BufferedWriter bw = null;
            String fileName="D:\\KeyB.txt";
            bw=new
            BufferedWriter(new FileWriter(fileName));
            bw.write(bobDesKey.toString());
            bw.close();
        }catch(Exception ex){}
    }//GEN-LAST:event_btnEncyptKABActionPerformed

    private void btnEncOrDecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncOrDecActionPerformed
        // TODO add your handling code here:
        DESCS des = new DESCS();
        des.setVisible(true);
    }//GEN-LAST:event_btnEncOrDecActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bob_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bob_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bob_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bob_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bob_Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEncOrDec;
    private javax.swing.JButton btnEncyptKAB;
    private javax.swing.JButton btnKeyAB;
    private javax.swing.JButton btnKeyAlice;
    private javax.swing.JButton btnKeyBoB;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField txtEncyptKAB;
    private javax.swing.JTextField txtKeyA;
    private javax.swing.JTextField txtKeyB;
    private javax.swing.JTextField txtKeyKAB;
    // End of variables declaration//GEN-END:variables
}
